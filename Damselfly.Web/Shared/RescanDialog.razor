
@using System.Linq

@inject UserStatusService userStatusService
@inject ThumbnailService thumbService
@inject IndexingService indexService
@inject ImageRecognitionService aiService

<MudDialog>
    <DialogContent>
        @if (Folder != null)
        {
            <MudText>Re-scan folder @Folder.Name (@Count @ImageText):</MudText>
        }
        else
        {
            <MudText>Re-scan @Count @ImageText:</MudText>
        }
        <div>
            <MudCheckBox @bind-Checked="@ReIndex" Label="Re-index image files" />
        </div>
        <div>
            <MudCheckBox @bind-Checked="@RegenThumbs" Label="Re-generate thumbnails" />
        </div>
        <div>
            <MudCheckBox @bind-Checked="@RescanAI" Label="Re-scan for AI objects" />
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Rescan">Rescan</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public ICollection<Image> Images { get; set; }

    [Parameter]
    public Folder Folder { get; set; }

    [Parameter]
    public int Count { get; set; }

    private string ImageText => Count > 1 ? "images" : "image";

    private bool ReIndex { get; set; }
    private bool RegenThumbs { get; set; }
    private bool RescanAI { get; set; }

    async Task Rescan()
    {
        if( Folder == null )
        {
            if( ReIndex )
                await indexService.MarkImagesForScan(Images);
            if( RegenThumbs )
                await thumbService.MarkImagesForScan(Images);
            if( RescanAI )
                await aiService.MarkImagesForScan(Images);
        }
        else
        {
            if (ReIndex)
                await indexService.MarkFolderForScan(Folder);
            if (RegenThumbs)
                await thumbService.MarkFolderForScan(Folder);
            if (RescanAI)
                await aiService.MarkFolderForScan(Folder);
        }
        MudDialog.Close(DialogResult.Ok(true));
    }

    void Cancel() => MudDialog.Cancel();

    protected override async Task OnInitializedAsync()
    {
        if (Images != null)
            Count = Images.Count;

        await base.OnInitializedAsync();
    }
}