name: damselfly-actions
on: [push]
jobs:
  build-desktop:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix: 
        target: [mac, linux, windows]
        include: 
          - target: windows
            os: windows-latest
          - target: linux
            os: ubuntu-latest
          - target: mac
            os: macos-latest
          - target: m1
            os: macos-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10
      
      - name: Run Electron build
        run: sh scripts/makedesktop.sh ${{ matrix.target }}

      - name: Upload desktop builds for Docker build
        uses: actions/upload-artifact@v2
        with:
          name: Desktop-Dist
          path: Damselfly.Web/wwwroot/desktop/*.*
          retention-days: 5

  build-server:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix: 
        target: [mac, windows, linux, alpine]
        include: 
          - target: windows
            os: ubuntu-latest
          - target: linux
            os: ubuntu-latest
          - target: alpine
            os: ubuntu-latest
          - target: mac
            os: macos-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v2

      - name: Setup Dotnet Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.100-preview.1.21103.13'

      - name: Run Dotnet Server Build
        run: sh scripts/makeserver.sh ${{ matrix.target }} 

      - name: Upload server builds to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Server-Dist
          path: server/*.zip     
          retention-days: 5

  build-docker:
    needs: [build-server, build-desktop]
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix: 
        target: [alpine]
        include: 
          - target: alpine
            os: ubuntu-latest

    steps:        
      - name: Checkout Source
        uses: actions/checkout@v2

      - name: Read VERSION file
        id: getversion
        run: echo "::set-output name=version::$(cat VERSION)"

      - name: Download Server Build
        uses: actions/download-artifact@v2
        with:
          name: Server-Dist
          path: server

      - name: Unzip server into publish folder
        run: |
             mkdir publish
             cd publish
             unzip $GITHUB_WORKSPACE/server/damselfly-server-${{ matrix.target }}-*.zip
             cd ..

      - name: Download Desktop Builds into wwwroot folder
        uses: actions/download-artifact@v2
        with:
          name: Desktop-Dist
          path: publish/wwwroot/desktop
      
      - name: Validate Desktop and server artifacts
        run: |
             echo "Desktop artifacts:"
             ls publish/wwwroot/desktop
             echo "Server artifacts:"
             ls server

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build Docker for Dev (develop only)
        if: github.ref == 'refs/heads/develop'
        run: sh scripts/makedocker.sh
      
      - name: Build Docker for Release (master only)
        if: github.ref == 'refs/heads/master'
        run: sh scripts/makedocker.sh master

      - name: Create Release (master only)
        id: create_release
        if: github.ref == 'refs/heads/master'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ steps.getversion.outputs.version }}-beta
          release_name: Release v${{ steps.getversion.outputs.version }}
          body: |
            Docker: docker pull webreaper/damselfly:${{ steps.getversion.outputs.version }}-beta
          draft: false
          prerelease: true

      - name: Upload assets to Release (master only)
        uses: alexellis/upload-assets@0.2.3   
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["server/*", "publish/wwwroot/desktop/*"]'  
